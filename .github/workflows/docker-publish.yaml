name: Docker Build and Publish

# Note: This workflow publishes containers to:
# - Docker Hub: https://hub.docker.com/r/billchurch/bhyve-mqtt
# - GitHub Container Registry: ghcr.io/billchurch/bhyve-mqtt
on:
  release:
    types: [published]
  repository_dispatch:
    types: [release-published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release tag
        id: release_tag
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.client_payload.release.tag_name }}" >> $GITHUB_OUTPUT
          fi
          echo "Set TAG_NAME to: $(cat $GITHUB_OUTPUT | grep TAG_NAME | cut -d= -f2)"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            billchurch/bhyve-mqtt
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.release_tag.outputs.TAG_NAME }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.release_tag.outputs.TAG_NAME }}
            type=semver,pattern={{major}},value=${{ steps.release_tag.outputs.TAG_NAME }}
            type=raw,value=latest
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
